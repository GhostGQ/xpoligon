import React from 'react';
import type { TableItem } from '../../entities/table';

export interface TableSidebarProps {
  tableItems: TableItem[];
  selectedPolygon: string | null;
  onLinkPolygon: (itemId: string) => void;
  onUnlinkItem: (itemId: string) => void;
}

const TableSidebar: React.FC<TableSidebarProps> = ({
  tableItems,
  selectedPolygon,
  onLinkPolygon,
  onUnlinkItem,
}) => {
  return (
    <div className='w-80 bg-gray-50 p-4 rounded-lg flex flex-col'>
      <h3 className='text-lg font-bold mb-4'>–≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏</h3>

      {selectedPolygon && (
        <div className='mb-4 p-3 bg-orange-100 rounded border-l-4 border-orange-500'>
          <div className='text-sm font-medium text-orange-800'>
            –ü–æ–ª–∏–≥–æ–Ω –≤—ã–±—Ä–∞–Ω
          </div>
          <div className='text-xs text-orange-600'>
            –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏, Delete –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –ü–ö–ú –≤–Ω–µ
            –ø–æ–ª–∏–≥–æ–Ω–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—ã–¥–µ–ª–µ–Ω–∏—è
          </div>
        </div>
      )}

      <div className='space-y-2 flex-1 overflow-y-auto'>
        {tableItems.map(item => (
          <div
            key={item.id}
            className={`p-3 rounded-lg border cursor-pointer transition-all ${
              item.linkedPolygon
                ? 'bg-green-100 border-green-300 hover:bg-green-200'
                : selectedPolygon
                ? 'bg-white border-gray-300 hover:bg-blue-50 hover:border-blue-400'
                : 'bg-white border-gray-200'
            }`}
            onClick={() => {
              if (selectedPolygon && !item.linkedPolygon) {
                onLinkPolygon(item.id);
              }
            }}
          >
            <div className='flex justify-between items-center'>
              <div>
                <div className='font-medium'>{item.name}</div>
                {item.linkedPolygon && (
                  <div className='text-sm text-green-600 flex items-center gap-2'>
                    <span>‚úì –ü—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–æ–ª–∏–≥–æ–Ω—É</span>
                    <button
                      onClick={e => {
                        e.stopPropagation();
                        onUnlinkItem(item.id);
                      }}
                      className='text-red-500 hover:text-red-700'
                      title='–û—Ç–≤—è–∑–∞—Ç—å'
                    >
                      ‚úï
                    </button>
                  </div>
                )}
              </div>

              {item.linkedPolygon && (
                <div className='w-4 h-4 bg-green-500 rounded-full'></div>
              )}
            </div>
          </div>
        ))}
      </div>

      <div className='mt-4 pt-4 border-t text-xs text-gray-500'>
        <div className='space-y-1'>
          <div>üü† –û—Ä–∞–Ω–∂–µ–≤—ã–π - –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª–∏–≥–æ–Ω</div>
          <div>üü¢ –ó–µ–ª–µ–Ω—ã–π - –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –ø–æ–ª–∏–≥–æ–Ω</div>
          <div>üîµ –°–∏–Ω–∏–π - –æ–±—ã—á–Ω—ã–π –ø–æ–ª–∏–≥–æ–Ω</div>
        </div>
        <div className='mt-2 pt-2 border-t'>
          <div>
            <strong>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</strong>
          </div>
          <div>‚Ä¢ –õ–ö–ú - —Å–æ–∑–¥–∞—Ç—å/–≤—ã–±—Ä–∞—Ç—å/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</div>
          <div>‚Ä¢ –ü–ö–ú –ø–æ —Ç–æ—á–∫–µ - —É–¥–∞–ª–∏—Ç—å —Ç–æ—á–∫—É</div>
          <div>‚Ä¢ –ü–ö–ú –≤–Ω–µ –ø–æ–ª–∏–≥–æ–Ω–∞ - —Å–Ω—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ</div>
          <div>‚Ä¢ Delete/Backspace - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª–∏–≥–æ–Ω</div>
        </div>
      </div>
    </div>
  );
};

export default TableSidebar;
